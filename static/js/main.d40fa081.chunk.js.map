{"version":3,"sources":["Components/ContactForm/ContactForm.jsx","Components/ContactList/ContactList.jsx","Components/Filter/Filter.jsx","Components/App/App.jsx","index.js"],"names":["ContactForm","state","name","number","nameInputId","shortid","generate","numberInputId","handleChange","evt","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","htmlFor","type","pattern","title","onChange","id","required","React","Component","ContactList","onDeleteContact","console","log","map","onClick","Filter","App","contacts","filter","onSameName","find","el","addContact","data","contact","prevState","alert","deleteContact","contactId","changeFilter","getFiltredContacts","normalizedFilter","toLowerCase","includes","filtredNames","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d40fa081.chunk.js","sourcesContent":["import React from 'react';\r\nimport shortid from 'shortid';\r\n\r\nclass ContactForm extends React.Component {\r\n    state = {\r\n        name: '',\r\n        number: '',\r\n    }\r\n    nameInputId = shortid.generate();\r\n    numberInputId = shortid.generate();\r\n\r\n    handleChange = evt => {\r\n        const { name, value } = evt.currentTarget;\r\n        this.setState({\r\n            [name]:value,\r\n        })\r\n    }\r\n    handleSubmit = evt => {\r\n        evt.preventDefault();\r\n\r\n        this.props.onSubmit(this.state);\r\n        this.reset();\r\n    }\r\n    reset = () => {\r\n        this.setState({ name: '', number: '' });\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit}>\r\n                <label htmlFor={this.nameInputId}>Name\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        value={this.state.name}\r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                        onChange={this.handleChange}\r\n                        id={this.nameInputId}\r\n                        required\r\n                    />\r\n                </label>\r\n                <label htmlFor={this.numberInputId}>Number\r\n                    <input\r\n                        type=\"tel\"\r\n                        name=\"number\"\r\n                        value={this.state.number}\r\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                        onChange={this.handleChange}\r\n                        id={this.numberInputId}\r\n                        required\r\n                        \r\n                    />\r\n                </label>\r\n                <button type='submit' >Add contact</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\nexport default ContactForm;","import React from 'react';\r\n\r\nconst ContactList = ({value, onDeleteContact}) => {\r\n    console.log(value)\r\n    return (\r\n        <ul value={value}>\r\n            {value.map(({ id, name, number}) => {\r\n                return (\r\n                    <div key={id}>\r\n                        <li>{name}: {number}</li> <button onClick={()=>onDeleteContact(id)}>Delete</button>\r\n                    </div>\r\n                )\r\n            })}\r\n        </ul>\r\n    )\r\n}\r\nexport default ContactList;","import React from 'react';\r\nimport shortid from 'shortid';\r\n\r\nconst nameInputId = shortid.generate();\r\n\r\nconst Filter = ({value, onChange }) => (\r\n    <label htmlFor={nameInputId}>\r\n        Find contacts by Name\r\n        <input type=\"text\" value={value} onChange={onChange} id={nameInputId} />\r\n    </label>\r\n)\r\n\r\nexport default Filter;","import React from 'react';\r\nimport shortid from 'shortid';\r\nimport ContactForm from '../ContactForm/ContactForm';\r\nimport ContactList from '../ContactList/ContactList';\r\nimport Filter from '../Filter/Filter';\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        contacts: [\r\n            {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\r\n            {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\r\n            {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\r\n            {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\r\n        ],\r\n        filter: '',\r\n    }\r\n    onSameName = (name, contacts) => {\r\n        const hasName = contacts.find(el => el.name === name);\r\n        return(hasName ? false : true)\r\n    }\r\n    addContact = data => {\r\n        const contact = {\r\n            id: shortid.generate(),\r\n            name: data.name,\r\n            number: data.number,\r\n        }\r\n\r\n        this.setState(prevState => {\r\n            const isUnique = this.onSameName(contact.name, prevState.contacts);\r\n            if (isUnique) {\r\n                return {\r\n                    contacts: [contact, ...prevState.contacts]\r\n                };\r\n            } else {\r\n                alert('Контакт с таким Именем уже добавлен!')\r\n            }\r\n        })\r\n    }\r\n    deleteContact = contactId => {\r\n        this.setState(prevState => ({\r\n            contacts: prevState.contacts.filter(contact => contact.id !== contactId),\r\n        }))\r\n    }\r\n    changeFilter = evt => {\r\n        this.setState({filter: evt.currentTarget.value})\r\n    }\r\n    getFiltredContacts = () => {\r\n        const { filter, contacts } = this.state;\r\n        const normalizedFilter = filter.toLowerCase();\r\n\r\n        return contacts.filter(contact =>\r\n            contact.name.toLowerCase().includes(normalizedFilter));\r\n    }\r\n\r\n    render() {\r\n        const { filter} = this.state;\r\n        const filtredNames = this.getFiltredContacts();\r\n        \r\n        return (    \r\n            <>\r\n                <h1>Phonebook</h1>\r\n                <ContactForm onSubmit={this.addContact}/>\r\n                <h2>Contacts</h2>\r\n                <Filter value={filter} onChange={this.changeFilter} />\r\n                <ContactList value={filtredNames} onDeleteContact={this.deleteContact}/>\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App/App'\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}